  <h2>Add a new Attraction to Hoppin!</h2>

  <form>
    <div id="locationField">
      <input id="autocomplete" placeholder="Enter your address"
             onFocus="geolocate()" type="text"></input>
    </div>
    <div id="">
    <button type="submit" class="btn btn-default" id="submitbut">Submit</button>
  </form>  

    <script>
      // This example displays an address form, using the autocomplete feature
      // of the Google Places API to help users fill in the information.

      // This example requires the Places library. Include the libraries=places
      // parameter when you first load the API. For example:
      // <script src="https://maps.googleapis.com/maps/api/js?key=YOUR_API_KEY&libraries=places">
      var lat = 0;
      var lng = 0;
      var name = "";
      var state = "";
      var placeSearch, autocomplete;
      var componentForm = {
        street_number: 'short_name',
        route: 'long_name',
        locality: 'long_name',
        administrative_area_level_1: 'short_name',
        country: 'long_name',
        postal_code: 'short_name'
      };

      function initAutocomplete() {
        // Create the autocomplete object, restricting the search to geographical
        // location types.
        autocomplete = new google.maps.places.Autocomplete(
            /** @type {!HTMLInputElement} */(document.getElementById('autocomplete')),
            {types: ['geocode']});

        // When the user selects an address from the dropdown, populate the address
        // fields in the form.
        autocomplete.addListener('place_changed', fillInAddress);
      }

      function fillInAddress() {
        // Get the place details from the autocomplete object.
        var place = autocomplete.getPlace();

        // for (var component in componentForm) {
        //   document.getElementById(component).value = '';
        //   document.getElementById(component).disabled = false;
        // }

        // // Get each component of the address from the place details
        // // and fill the corresponding field on the form.
        // for (var i = 0; i < place.address_components.length; i++) {
        //   var addressType = place.address_components[i].types[0];
        //   if (componentForm[addressType]) {
        //     var val = place.address_components[i][componentForm[addressType]];
        //     document.getElementById(addressType).value = val;
        //   }
        // }
        var coordinates = JSON.parse(JSON.stringify(place)).geometry.location;
        console.log("coordindates are lat " + coordinates.lat + " lng " + coordinates.lng);
        name = place.name;
        lat = coordinates.lat;
        lng = coordinates.lng;
        state = place.address_components[4].short_name
        console.log("variables now are " + name + " lng " + lng + " lat " + lat);

        
      }

      // Bias the autocomplete object to the user's geographical location,
      // as supplied by the browser's 'navigator.geolocation' object.
      function geolocate() {
        if (navigator.geolocation) {
          navigator.geolocation.getCurrentPosition(function(position) {
            var geolocation = {
              lat: position.coords.latitude,
              lng: position.coords.longitude
            };
            var circle = new google.maps.Circle({
              center: geolocation,
              radius: position.coords.accuracy
            });
            autocomplete.setBounds(circle.getBounds());
          });
        }
      }

      $("#submitbut").on("click", function(){
        event.preventDefault();
        var topline;
        console.log("you are in submit button lat is " + lat + " lng " + lng);
        var passer = {
          "lat": lat,
          "lng": lng,
          "name": name,
          "state": state
        }

        $.post("/", passer, function(req, res){
          
        }).done(function(res){
          window.location.replace("/");
        });


      });


    </script>
    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyBSEr0cunaPSSZcfDkBSapD2wXJ6pfLhHA&libraries=places&callback=initAutocomplete" async defer></script>
